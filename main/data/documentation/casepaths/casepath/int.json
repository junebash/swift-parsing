{"abstract":[{"text":"Transforms this conversion to ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" into a conversion to ","type":"text"},{"code":"Int","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"int"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","text":"BinaryFloatingPointToFixedWidthInteger","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">> { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"A fluent version of ","type":"text"},{"code":"Conversion\/int-swift.type.property","type":"codeVoice"},{"text":". Equivalent to calling ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/map(_:)","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"with ","type":"text"},{"code":"Conversion\/int-swift.type.property","type":"codeVoice"},{"text":":","type":"text"}]},{"code":["doubleConversion.int","\/\/ =","doubleConversion.map(.int)"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/casepaths\/casepath\/int"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/Conversion-Implementations"]]},"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/int","interfaceLanguage":"swift"},"metadata":{"conformance":{"constraints":[{"code":"Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"extendedModule":"Parsing","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"int","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","text":"BinaryFloatingPointToFixedWidthInteger","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"modules":[{"name":"CasePaths"}],"title":"int","roleHeading":"Instance Property","symbolKind":"property","role":"symbol","externalID":"s:7Parsing10ConversionPAASd6OutputRtzrlE3intAA11ConversionsO3MapVy_xAH38BinaryFloatingPointToFixedWidthIntegerVy_SdSiGGvp::SYNTHESIZED::s:9CasePaths0A4PathV"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath":{"abstract":[{"text":"A path that supports embedding a value in a root and attempting to extract a rootâ€™s embedded","type":"text"},{"text":" ","type":"text"},{"text":"value.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CasePath"}],"url":"\/documentation\/casepaths\/casepath","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath","title":"CasePath","type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CasePath"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/Map":{"url":"\/documentation\/parsing\/conversions\/map","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A conversion that composes two conversions together by composing their"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)"},{"type":"text","text":" functions and "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)"},{"type":"text","text":" functions together."}],"title":"Conversions.Map","navigatorTitle":[{"kind":"identifier","text":"Map"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/Map","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Map"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/apply(_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/apply(_:)","required":true,"abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"url":"\/documentation\/parsing\/conversion\/apply(_:)","title":"apply(_:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"url":"\/documentation\/parsing\/conversions","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"title":"Conversions","navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}]},"doc://co.pointfree.Parsing/documentation/CasePaths":{"url":"\/documentation\/casepaths","role":"collection","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths","abstract":[],"kind":"symbol","title":"CasePaths","type":"topic"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/int":{"title":"int","url":"\/documentation\/casepaths\/casepath\/int","abstract":[{"text":"Transforms this conversion to ","type":"text"},{"code":"Double","type":"codeVoice"},{"text":" into a conversion to ","type":"text"},{"code":"Int","type":"codeVoice"},{"type":"text","text":"."}],"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/int","conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Double"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"int","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","text":"BinaryFloatingPointToFixedWidthInteger","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":">>","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/unapply(_:)":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/unapply(_:)","required":true,"abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"url":"\/documentation\/parsing\/conversion\/unapply(_:)","title":"unapply(_:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/BinaryFloatingPointToFixedWidthInteger":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"BinaryFloatingPointToFixedWidthInteger"}],"navigatorTitle":[{"kind":"identifier","text":"BinaryFloatingPointToFixedWidthInteger"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/BinaryFloatingPointToFixedWidthInteger","title":"Conversions.BinaryFloatingPointToFixedWidthInteger","url":"\/documentation\/parsing\/conversions\/binaryfloatingpointtofixedwidthinteger","abstract":[{"text":"A conversion from a ","type":"text"},{"code":"Double","type":"codeVoice"},{"type":"text","text":" to an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/Conversion-Implementations":{"url":"\/documentation\/casepaths\/casepath\/conversion-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/Conversion-Implementations","abstract":[],"kind":"article","title":"Conversion Implementations","type":"topic"},"doc://co.pointfree.Parsing/documentation/CasePaths/CasePath/map(_:)":{"abstract":[{"type":"text","text":"Returns a conversion that transforms the output of this conversion with a given downstream"},{"type":"text","text":" "},{"type":"text","text":"conversion."}],"type":"topic","url":"\/documentation\/casepaths\/casepath\/map(_:)","kind":"symbol","title":"map(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/CasePaths\/CasePath\/map(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}]}}}