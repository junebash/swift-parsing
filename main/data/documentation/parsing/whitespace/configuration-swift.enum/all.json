{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum\/all","interfaceLanguage":"swift"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"}],"platforms":["Linux"],"languages":["swift"]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum"]]},"metadata":{"role":"symbol","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10WhitespaceV13ConfigurationO3allyAEyxq__GAGmAA13CountingRangeRzAA10ConversionR_Sl5InputRp_AJ_11SubSequenceQY_AKRSSl6OutputRp_AN_ALQY_AORSs5UInt8VAN_7ElementRT_r0_lF","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"}],"roleHeading":"Case","title":"Whitespace.Configuration.all","symbolKind":"case"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/whitespace\/configuration-swift.enum\/all"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"text":"A parser that consumes whitespace from the beginning of input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","url":"\/documentation\/parsing\/whitespace","role":"symbol","type":"topic","title":"Whitespace","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/Configuration-swift.enum":{"abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Configuration","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Configuration","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum","url":"\/documentation\/parsing\/whitespace\/configuration-swift.enum","type":"topic","role":"symbol","title":"Whitespace.Configuration"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace/Configuration-swift.enum/all":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace\/Configuration-swift.enum\/all","title":"Whitespace.Configuration.all","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"all"}],"role":"symbol","url":"\/documentation\/parsing\/whitespace\/configuration-swift.enum\/all","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","title":"Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol"}}}