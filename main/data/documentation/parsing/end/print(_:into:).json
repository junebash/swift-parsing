{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/print(_:into:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"output","kind":"internalParam"},{"text":": (), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Parameters"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"output: A well-structured value to be printed to the given input."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"input: A nebulous, mutable piece of data to be incrementally printed into."}],"type":"paragraph"}]}],"type":"unorderedList"}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"Parsing"}],"externalID":"s:7Parsing3EndV5print_4intoyyt_xztKF","title":"print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End"]]},"abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/end\/print(_:into:)"]}],"sections":[],"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing/End/print(_:into:)":{"type":"topic","role":"symbol","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"url":"\/documentation\/parsing\/end\/print(_:into:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End\/print(_:into:)","title":"print(_:into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","url":"\/documentation\/parsing\/end","role":"symbol","type":"topic","title":"End","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","title":"Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol"}}}