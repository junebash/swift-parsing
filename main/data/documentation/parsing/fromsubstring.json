{"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromSubstring","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"SubstringParser","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SubstringParser","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"},{"text":", ","kind":"text"},{"text":"SubstringParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Substring","kind":"typeIdentifier","preciseIdentifier":"s:Ss"}]}],"kind":"declarations"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-1o4e0","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-4m4bp","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-5n0la"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/fromSubstring","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/substringParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/toSubstring"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/Parser-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]]},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'From(.substring)' instead."}]}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fromsubstring"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring"},"kind":"symbol","metadata":{"navigatorTitle":[{"text":"FromSubstring","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromSubstring","kind":"identifier"}],"roleHeading":"Structure","role":"symbol","title":"FromSubstring","platforms":[],"externalID":"s:7Parsing13FromSubstringV","modules":[{"name":"Parsing"}],"symbolKind":"struct"},"seeAlsoSections":[{"generated":true,"title":"Common parsers","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/End":{"abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","url":"\/documentation\/parsing\/end","role":"symbol","type":"topic","title":"End","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/init(_:)-4m4bp":{"role":"symbol","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-4m4bp","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":", "},{"code":"SubstringParser","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", and "},{"code":"SubstringParser.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}]},"kind":"symbol","url":"\/documentation\/parsing\/fromsubstring\/init(_:)-4m4bp","deprecated":true,"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"kind":"text","text":")"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/substringParser":{"url":"\/documentation\/parsing\/fromsubstring\/substringparser","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/substringParser","deprecated":true,"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"substringParser"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SubstringParser"}],"role":"symbol","abstract":[],"title":"substringParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"navigatorTitle":[{"kind":"identifier","text":"Always"}],"kind":"symbol","title":"Always","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","role":"symbol","url":"\/documentation\/parsing\/always","abstract":[{"type":"text","text":"A parser that always succeeds with the given value, and does not consume any input."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/UUID":{"abstract":[{"text":"A parser that consumes a ","type":"text"},{"code":"UUID","type":"codeVoice"},{"text":" value from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","url":"\/documentation\/parsing\/uuid","role":"article","type":"topic","title":"UUID"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"abstract":[{"text":"A parser that runs the given parser, but does not consume any input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Peek","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","url":"\/documentation\/parsing\/peek","role":"symbol","type":"topic","title":"Peek","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/CharacterSet":{"abstract":[{"text":"A parser that consumes the characters contained in a ","type":"text"},{"code":"CharacterSet","type":"codeVoice"},{"text":" from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","url":"\/documentation\/parsing\/characterset","role":"article","type":"topic","title":"CharacterSet"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOf","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","title":"OneOf","navigatorTitle":[{"text":"OneOf","kind":"identifier"}],"url":"\/documentation\/parsing\/oneof","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Float":{"abstract":[{"text":"A parser that consumes a floating-point number from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","url":"\/documentation\/parsing\/float","role":"article","type":"topic","title":"Float"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","title":"Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/From":{"abstract":[],"kind":"symbol","navigatorTitle":[{"text":"From","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","url":"\/documentation\/parsing\/from","role":"symbol","type":"topic","title":"From","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"From","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"deprecated":true,"title":"FromUnicodeScalarView","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUnicodeScalarView","kind":"identifier"}],"navigatorTitle":[{"text":"FromUnicodeScalarView","kind":"identifier"}],"url":"\/documentation\/parsing\/fromunicodescalarview","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"title":"AnyParser","url":"\/documentation\/parsing\/anyparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View":{"abstract":[],"deprecated":true,"kind":"symbol","navigatorTitle":[{"text":"FromUTF8View","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","url":"\/documentation\/parsing\/fromutf8view","role":"symbol","type":"topic","title":"FromUTF8View","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUTF8View","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","title":"Newline","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/newline","deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"title":"Skip","url":"\/documentation\/parsing\/skip","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/init(_:)-5n0la":{"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-5n0la","role":"symbol","abstract":[],"title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"ArraySlice<UInt8>","type":"codeVoice"},{"type":"text","text":", "},{"code":"SubstringParser","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", and "},{"code":"SubstringParser.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"deprecated":true,"url":"\/documentation\/parsing\/fromsubstring\/init(_:)-5n0la","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"text":"A parser that consumes whitespace from the beginning of input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","url":"\/documentation\/parsing\/whitespace","role":"symbol","type":"topic","title":"Whitespace","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"abstract":[{"text":"A parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Not","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","url":"\/documentation\/parsing\/not","role":"symbol","type":"topic","title":"Not","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/CaseIterable":{"abstract":[{"text":"A parser-printer that consumes a case-iterable, raw representable value from the beginning of a","type":"text"},{"text":" ","type":"text"},{"text":"string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","url":"\/documentation\/parsing\/caseiterable","role":"article","type":"topic","title":"CaseIterable"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/parse(_:)":{"url":"\/documentation\/parsing\/fromsubstring\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"SubstringParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"kind":"symbol","type":"topic","title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/parse(_:)","deprecated":true,"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"kind":"symbol","title":"Parse","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"navigatorTitle":[{"text":"Parse","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"topic","url":"\/documentation\/parsing\/parse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","url":"\/documentation\/parsing\/lazy\/parse(_:)","role":"symbol","type":"topic","title":"parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","url":"\/documentation\/parsing\/startswith","role":"symbol","type":"topic","title":"StartsWith","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Optionally":{"url":"\/documentation\/parsing\/optionally","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"kind":"symbol","title":"Optionally","abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it fails.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","url":"\/documentation\/parsing\/prefixupto","role":"symbol","type":"topic","title":"PrefixUpTo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","url":"\/documentation\/parsing\/fail","role":"symbol","type":"topic","title":"Fail","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/init(_:)-1o4e0":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/init(_:)-1o4e0","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring.UnicodeScalarView","type":"codeVoice"},{"text":", ","type":"text"},{"code":"SubstringParser","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"SubstringParser.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/parsing\/fromsubstring\/init(_:)-1o4e0","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(() -> "},{"kind":"typeIdentifier","text":"SubstringParser"},{"kind":"text","text":")"}],"type":"topic","title":"init(_:)","deprecated":true,"kind":"symbol","abstract":[],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","isActive":true,"type":"reference"},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","url":"\/documentation\/parsing\/lazy","role":"symbol","type":"topic","title":"Lazy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"First","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"title":"First","url":"\/documentation\/parsing\/first","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/fromSubstring":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/fromSubstring","kind":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fromSubstring","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"role":"symbol","abstract":[],"title":"fromSubstring","deprecated":true,"url":"\/documentation\/parsing\/fromsubstring\/fromsubstring","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"type":"topic","url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"title":"Prefix","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/toSubstring":{"title":"toSubstring","type":"topic","deprecated":true,"role":"symbol","url":"\/documentation\/parsing\/fromsubstring\/tosubstring","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/toSubstring","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"toSubstring"},{"kind":"text","text":": ("},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"}],"kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Digits":{"abstract":[{"text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code","type":"text"},{"text":" ","type":"text"},{"text":"units.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Digits","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","url":"\/documentation\/parsing\/digits","role":"symbol","type":"topic","title":"Digits","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Digits","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","url":"\/documentation\/parsing\/prefixthrough","role":"symbol","type":"topic","title":"PrefixThrough","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Bool":{"abstract":[{"text":"A parser that consumes a Boolean value from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","url":"\/documentation\/parsing\/bool","role":"article","type":"topic","title":"Bool"},"doc://co.pointfree.Parsing/documentation/Parsing/String":{"abstract":[{"text":"A parser that consumes a string literal from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","url":"\/documentation\/parsing\/string","role":"article","type":"topic","title":"String"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"url":"\/documentation\/parsing\/many","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"kind":"symbol","title":"Many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","type":"topic","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Many"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Stream":{"url":"\/documentation\/parsing\/stream","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"title":"Stream","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"abstract":[{"text":"A parser that can parse streams of input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"title":"FromSubstring","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"FromSubstring"}],"deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromSubstring"}],"url":"\/documentation\/parsing\/fromsubstring"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"abstract":[{"text":"A parser that consumes everything to the end of the collection and returns this subsequence as","type":"text"},{"text":" ","type":"text"},{"text":"its output.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","url":"\/documentation\/parsing\/rest","role":"symbol","type":"topic","title":"Rest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring/Parser-Implementations":{"role":"collectionGroup","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring\/Parser-Implementations","url":"\/documentation\/parsing\/fromsubstring\/parser-implementations","type":"topic","kind":"article","title":"Parser Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","navigatorTitle":[{"kind":"identifier","text":"Consumed"}],"type":"topic","abstract":[{"type":"text","text":"A parser that returns the subsequence of input consumed by another parser."}],"title":"Consumed","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumed"}],"url":"\/documentation\/parsing\/consumed"},"doc://co.pointfree.Parsing/documentation/Parsing/Int":{"abstract":[{"text":"A parser that consumes an integer from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","url":"\/documentation\/parsing\/int","role":"article","type":"topic","title":"Int"}}}