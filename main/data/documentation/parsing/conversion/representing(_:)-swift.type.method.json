{"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","text":"Conversions","preciseIdentifier":"s:7Parsing11ConversionsO"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue","text":"FromRawValue","preciseIdentifier":"s:7Parsing11ConversionsO12FromRawValueV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"RawRepresentable","preciseIdentifier":"s:SY"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Return Value","anchor":"return-value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"A conversion from a raw value to the given type.","type":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"A type that conforms to ","type":"text"},{"code":"RawRepresentable","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"name":"type"}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"This conversion is useful for mapping the output of a more primitive parser-printer into a"},{"type":"text","text":" "},{"type":"text","text":"raw representable value."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"For example, you may have a raw representable type that wraps a more primitive type for the"},{"type":"text","text":" "},{"type":"text","text":"purpose of strengthening type requirements in your APIs. One example is an identifier type"},{"type":"text","text":" "},{"type":"text","text":"that wraps an integer:"}],"type":"paragraph"},{"code":["struct UserID: RawRepresentable {","  var rawValue: Int","}"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"You can transform an "},{"type":"codeVoice","code":"Int"},{"type":"text","text":" parser into a "},{"type":"codeVoice","code":"UserID"},{"type":"text","text":" parser by invoking "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d","type":"reference","isActive":true},{"type":"text","text":" "},{"type":"text","text":"with this conversion:"}],"type":"paragraph"},{"code":["let userID = Int.parser().map(.representing(UserID.self))"],"syntax":"swift","type":"codeListing"},{"inlineContent":[{"type":"text","text":"See "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.method","isActive":true},{"type":"text","text":" for a fluent version of this interface that transforms"},{"type":"text","text":" "},{"type":"text","text":"an existing conversion. This fluent API is particularly useful when mapping string raw values"},{"type":"text","text":" "},{"type":"text","text":"directly from parsers of substrings and UTF-8 views, which require first transforming the"},{"type":"text","text":" "},{"type":"text","text":"parsed substring or UTF-8 view into a string via the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","isActive":true},{"type":"text","text":" and"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","isActive":true},{"type":"text","text":" conversions."}],"type":"paragraph"},{"code":["struct EmailAddress: RawRepresentable {","  var rawValue: String","}","","let emailAddress = Parse(.string.representing(EmailAddress.self)) {","  Consumed {","    PrefixUpTo(\"@\")","    \"@\"","    Rest()","  }","}"],"syntax":"swift","type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversion\/representing(_:)-swift.type.method"]}],"metadata":{"roleHeading":"Type Method","externalID":"s:7Parsing10ConversionPAAE12representingyAA11ConversionsO12FromRawValueVy_qd__Gqd__mAIRszSYRd__lFZ","modules":[{"name":"Parsing"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"representing","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"title":"representing(_:)","extendedModule":"Parsing","symbolKind":"method","role":"symbol"},"seeAlsoSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/memberwise(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/case(_:)-4j2n7","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/json(_:decoder:encoder:)-swift.type.method","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.type.method"],"generated":true,"title":"Common conversions"}],"kind":"symbol","abstract":[{"type":"text","text":"A conversion from a given raw representable type’s raw value to itself."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/representing(_:)-swift.type.method":{"url":"\/documentation\/parsing\/conversion\/representing(_:)-swift.type.method","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A conversion from a given raw representable type’s raw value to itself."}],"title":"representing(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.type.method","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-3u2b5":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.SubstringToString","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"string","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Conversions","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO"},{"text":".","kind":"text"},{"text":"SubstringToString","preciseIdentifier":"s:7Parsing11ConversionsO17SubstringToStringV","kind":"typeIdentifier"}],"title":"string","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-3u2b5","abstract":[{"type":"text","text":"A conversion from "},{"code":"Substring","type":"codeVoice"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-3u2b5"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/json(_:decoder:encoder:)-swift.type.method":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"json","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"decoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONDecoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONDecoderC"},{"text":", ","kind":"text"},{"text":"encoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"JSONEncoder","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation11JSONEncoderC"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","title":"json(_:decoder:encoder:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/conversion\/json(_:decoder:encoder:)-swift.type.method","abstract":[{"type":"text","text":"A conversion from "},{"code":"Data","type":"codeVoice"},{"type":"text","text":" to the given codable type."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/json(_:decoder:encoder:)-swift.type.method"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/string-swift.type.property-9owth":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/string-swift.type.property-9owth","abstract":[{"type":"text","text":"A conversion from "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":" to "},{"type":"codeVoice","code":"String"},{"type":"text","text":"."}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Conversions.BytesToString<Substring.UTF8View>","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"string","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"string"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO13BytesToStringV","text":"BytesToString"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":">"}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/conversion\/string-swift.type.property-9owth"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions/FromRawValue":{"title":"Conversions.FromRawValue","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromRawValue"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"FromRawValue"}],"kind":"symbol","url":"\/documentation\/parsing\/conversions\/fromrawvalue","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions\/FromRawValue","abstract":[{"type":"text","text":"A conversion from a raw value to a raw representable type."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/double-swift.type.property":{"kind":"symbol","abstract":[{"text":"A conversion from an ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":" to a ","type":"text"},{"code":"Double","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","type":"topic","url":"\/documentation\/parsing\/conversion\/double-swift.type.property","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"double","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing11ConversionsO38FixedWidthIntegerToBinaryFloatingPointV","text":"FixedWidthIntegerToBinaryFloatingPoint","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.FixedWidthIntegerToBinaryFloatingPoint<Int, Double>","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"double","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/double-swift.type.property"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/lossless(_:)-swift.type.method":{"kind":"symbol","url":"\/documentation\/parsing\/conversion\/lossless(_:)-swift.type.method","title":"lossless(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/lossless(_:)-swift.type.method","abstract":[{"type":"text","text":"A conversion from a string to a lossless string-convertible type."}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"lossless","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewOutput","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"NewOutput","kind":"typeIdentifier"},{"text":".Type) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/int-swift.type.property":{"abstract":[{"text":"A conversion from a ","type":"text"},{"type":"codeVoice","code":"Double"},{"text":" to an ","type":"text"},{"type":"codeVoice","code":"Int"},{"text":".","type":"text"}],"conformance":{"constraints":[{"code":"Self","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Conversions.BinaryFloatingPointToFixedWidthInteger<Double, Int>","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/parsing\/conversion\/int-swift.type.property","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/int-swift.type.property","title":"int","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"int","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO38BinaryFloatingPointToFixedWidthIntegerV","text":"BinaryFloatingPointToFixedWidthInteger"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/case(_:)-4j2n7":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/case(_:)-4j2n7","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/conversion\/case(_:)-4j2n7","title":"case(_:)","abstract":[{"text":"Converts the associated values of an enum case into the case, and an enum case into its","type":"text"},{"text":" ","type":"text"},{"text":"associated values.","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"`case`"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Values"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Enum"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Enum"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/representing(_:)-swift.method":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"representing"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewOutput"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":".Type) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO3MapV","text":"Map"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO","text":"Conversions"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Parsing11ConversionsO12FromRawValueV","text":"FromRawValue"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewOutput"},{"kind":"text","text":">>"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/representing(_:)-swift.method","url":"\/documentation\/parsing\/conversion\/representing(_:)-swift.method","type":"topic","kind":"symbol","title":"representing(_:)","abstract":[{"text":"Transforms this conversion to a raw value into a conversion to the given raw representable","type":"text"},{"text":" ","type":"text"},{"text":"type.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversions":{"url":"\/documentation\/parsing\/conversions","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A namespace for types that serve as conversions."}],"title":"Conversions","navigatorTitle":[{"kind":"identifier","text":"Conversions"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversions","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversions"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser/map(_:)-18m9d":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"MapConversion","preciseIdentifier":"s:7Parsing7ParsersO13MapConversionV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"C","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser\/map(_:)-18m9d","abstract":[{"text":"Returns a parser-printer that transforms the output of this parser with a given conversion.","type":"text"}],"url":"\/documentation\/parsing\/parser\/map(_:)-18m9d","title":"map(_:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion/memberwise(_:)":{"abstract":[{"text":"A conversion from a tuple of values into a struct and a struct into a tuple of values, using a","type":"text"},{"text":" ","type":"text"},{"text":"memberwise initializer.","type":"text"}],"title":"memberwise(_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"memberwise","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Values","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Struct","kind":"genericParameter"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Values"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Struct"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion\/memberwise(_:)","type":"topic","url":"\/documentation\/parsing\/conversion\/memberwise(_:)","kind":"symbol","role":"symbol"}}}