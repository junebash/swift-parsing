{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/ParserPrinter-Implementations","interfaceLanguage":"swift"},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/eraseToAnyParserPrinter()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print()","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(_:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(_:into:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(into:)"],"generated":true}],"metadata":{"modules":[{"name":"Parsing"}],"title":"ParserPrinter Implementations","role":"collectionGroup"},"variants":[{"paths":["\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/parserprinter-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"article","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/print(_:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(_:)","title":"print(_:)","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print(_:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data to something more nebulous."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"}],"kind":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"_EmptyInitializable","type":"codeVoice"},{"type":"text","text":"."}]},"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/eraseToAnyParserPrinter()":{"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParserPrinter","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"AnyParserPrinter","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing16AnyParserPrinterV"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/erasetoanyparserprinter()","type":"topic","kind":"symbol","title":"eraseToAnyParserPrinter()","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/eraseToAnyParserPrinter()"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/print(into:)":{"conformance":{"constraints":[{"type":"codeVoice","code":"Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"abstract":[{"text":"Attempts to print into a nebulous piece of data.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"into"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print(into:)","type":"topic","kind":"symbol","title":"print(into:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(into:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser":{"kind":"symbol","title":"Parsers.CaseIterableRawRepresentableParser","abstract":[],"navigatorTitle":[{"text":"CaseIterableRawRepresentableParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CaseIterableRawRepresentableParser","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parsers"}],"kind":"symbol","type":"topic","title":"Parsers","navigatorTitle":[{"kind":"identifier","text":"Parsers"}],"url":"\/documentation\/parsing\/parsers","abstract":[{"type":"text","text":"A namespace for types that serve as parsers."}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/print()":{"role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print()","title":"print()","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"_EmptyInitializable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"type":"topic","abstract":[{"text":"Attempts to print a nebulous piece of data.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parsers/CaseIterableRawRepresentableParser/print(_:into:)":{"url":"\/documentation\/parsing\/parsers\/caseiterablerawrepresentableparser\/print(_:into:)","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parsers\/CaseIterableRawRepresentableParser\/print(_:into:)","title":"print(_:into:)","kind":"symbol","type":"topic","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PrependableCollection"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":", "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" conforms to "},{"code":"CaseIterable","type":"codeVoice"},{"type":"text","text":", "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"RawRepresentable"},{"type":"text","text":", "},{"type":"codeVoice","code":"Prefix"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":", "},{"type":"codeVoice","code":"Input.Element"},{"text":" is ","type":"text"},{"code":"Prefix.Element","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Output.RawValue","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}