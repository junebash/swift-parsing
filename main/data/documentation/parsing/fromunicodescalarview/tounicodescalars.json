{"kind":"symbol","deprecationSummary":[{"inlineContent":[{"type":"text","text":"Use 'From(.unicodeScalars)' instead."}],"type":"paragraph"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"toUnicodeScalars","kind":"identifier"},{"text":": (","kind":"text"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss17UnicodeScalarViewV","kind":"typeIdentifier","text":"UnicodeScalarView"}]}]}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView\/toUnicodeScalars","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"toUnicodeScalars"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"UnicodeScalarView","preciseIdentifier":"s:Ss17UnicodeScalarViewV"}],"platforms":[],"title":"toUnicodeScalars","role":"symbol","externalID":"s:7Parsing21FromUnicodeScalarViewV02toC7ScalarsySs0cdE0Vxcvp","symbolKind":"property","modules":[{"name":"Parsing"}],"roleHeading":"Instance Property"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/fromunicodescalarview\/tounicodescalars"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView"]]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"deprecated":true,"title":"FromUnicodeScalarView","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUnicodeScalarView","kind":"identifier"}],"navigatorTitle":[{"text":"FromUnicodeScalarView","kind":"identifier"}],"url":"\/documentation\/parsing\/fromunicodescalarview","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView/toUnicodeScalars":{"url":"\/documentation\/parsing\/fromunicodescalarview\/tounicodescalars","abstract":[],"type":"topic","title":"toUnicodeScalars","kind":"symbol","deprecated":true,"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView\/toUnicodeScalars","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"toUnicodeScalars"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"text":") -> ","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UnicodeScalarView","preciseIdentifier":"s:Ss17UnicodeScalarViewV","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","title":"Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]}}}