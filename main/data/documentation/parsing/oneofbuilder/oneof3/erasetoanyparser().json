{"sections":[],"metadata":{"externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:7Parsing12OneOfBuilderO0B3Of3V","title":"eraseToAnyParser()","roleHeading":"Instance Method","role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","text":"AnyParser","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"modules":[{"name":"Parsing"}],"extendedModule":"Parsing"},"variants":[{"paths":["\/documentation\/parsing\/oneofbuilder\/oneof3\/erasetoanyparser()"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OneOf3","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OneOf3\/Parser-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OneOf3\/eraseToAnyParser()","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Return Value","type":"heading","level":2,"anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","type":"reference"},{"type":"text","text":" wrapping this parser."}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This form of "},{"type":"emphasis","inlineContent":[{"text":"type erasure","type":"text"}]},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"When you expose your composed parsers as the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","isActive":true,"type":"reference"},{"text":" type, you can change the underlying","type":"text"},{"text":" ","type":"text"},{"text":"implementation over time without affecting existing clients.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Equivalent to passing ","type":"text"},{"code":"self","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"AnyParser.init","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOf","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","title":"OneOf","navigatorTitle":[{"text":"OneOf","kind":"identifier"}],"url":"\/documentation\/parsing\/oneof","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}]},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OneOf3/Parser-Implementations":{"url":"\/documentation\/parsing\/oneofbuilder\/oneof3\/parser-implementations","title":"Parser Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OneOf3\/Parser-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OneOf3":{"url":"\/documentation\/parsing\/oneofbuilder\/oneof3","title":"OneOfBuilder.OneOf3","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OneOf3","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"OneOf3","kind":"identifier"}],"navigatorTitle":[{"text":"OneOf3","kind":"identifier"}],"abstract":[],"kind":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder":{"type":"topic","title":"OneOfBuilder","navigatorTitle":[{"kind":"identifier","text":"OneOfBuilder"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder","url":"\/documentation\/parsing\/oneofbuilder","role":"symbol","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs each parser in the closure, one after another, till one succeeds with an output."}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfBuilder"}],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOfBuilder/OneOf3/eraseToAnyParser()":{"type":"topic","title":"eraseToAnyParser()","url":"\/documentation\/parsing\/oneofbuilder\/oneof3\/erasetoanyparser()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOfBuilder\/OneOf3\/eraseToAnyParser()","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","title":"Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"title":"AnyParser","url":"\/documentation\/parsing\/anyparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"}}}