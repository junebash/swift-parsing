{"kind":"symbol","variants":[{"paths":["\/documentation\/parsing\/prefix\/init(while:)-5r6r0"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(while:)-5r6r0"},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}]}]}],"metadata":{"symbolKind":"init","roleHeading":"Initializer","externalID":"s:7Parsing6PrefixVAASs8UTF8ViewVRszrlE5whileACyAEGSbs5UInt8Vc_tcfc","role":"symbol","extendedModule":"Parsing","title":"init(while:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","text":"Element"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"Parsing"}]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","title":"Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"type":"topic","url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"title":"Prefix","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix/init(while:)-5r6r0":{"title":"init(while:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix\/init(while:)-5r6r0","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"abstract":[],"url":"\/documentation\/parsing\/prefix\/init(while:)-5r6r0","type":"topic"}}}