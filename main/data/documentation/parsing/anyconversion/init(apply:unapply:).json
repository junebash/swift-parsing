{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)"},"metadata":{"externalID":"s:7Parsing13AnyConversionV5apply7unapplyACyxq_Gq_Sgxc_xSgq_ctcfc","modules":[{"name":"Parsing"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?)"}],"roleHeading":"Initializer","title":"init(apply:unapply:)","symbolKind":"init"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"unapply","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":"?)","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"A closure that attempts to convert an input into an output. "},{"type":"codeVoice","code":"apply"},{"type":"text","text":" is executed"},{"type":"text","text":" "},{"type":"text","text":"each time the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/apply(_:)","isActive":true},{"type":"text","text":" method is called on the resulting conversion. If the closure"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", an error is thrown. Otherwise, the value is unwrapped."}],"type":"paragraph"}],"name":"apply"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that attempts to convert an output into an input. "},{"type":"codeVoice","code":"unapply"},{"type":"text","text":" is executed"},{"type":"text","text":" "},{"type":"text","text":"each time the "},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/unapply(_:)","type":"reference","isActive":true},{"type":"text","text":" method is called on the resulting conversion. If the closure"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", an error is thrown. Otherwise, the value is unwrapped."}]}],"name":"unapply"}]}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyconversion\/init(apply:unapply:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"text":"Creates a conversion that wraps the given closures in its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/apply(_:)","type":"reference","isActive":true},{"text":" and ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/unapply(_:)","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"methods, throwing an error when ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is returned.","type":"text"}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/apply(_:)":{"type":"topic","abstract":[{"text":"Attempts to transform an input into an output.","type":"text"}],"role":"symbol","kind":"symbol","title":"apply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"apply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/apply(_:)","url":"\/documentation\/parsing\/anyconversion\/apply(_:)"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Conversion":{"navigatorTitle":[{"text":"Conversion","kind":"identifier"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion","abstract":[{"text":"Declares a type that can transform an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value into an ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value ","type":"text"},{"type":"emphasis","inlineContent":[{"text":"and","type":"text"}]},{"text":" transform an","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Output"},{"text":" value back into an ","type":"text"},{"type":"codeVoice","code":"Input"},{"text":" value.","type":"text"}],"url":"\/documentation\/parsing\/conversion","title":"Conversion","role":"symbol","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/init(apply:unapply:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/init(apply:unapply:)","kind":"symbol","type":"topic","url":"\/documentation\/parsing\/anyconversion\/init(apply:unapply:)","title":"init(apply:unapply:)","abstract":[{"text":"Creates a conversion that wraps the given closures in its ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/apply(_:)"},{"text":" and ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/unapply(_:)","type":"reference","isActive":true},{"text":" ","type":"text"},{"text":"methods, throwing an error when ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" is returned.","type":"text"}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"apply","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?)"}]},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"url":"\/documentation\/parsing\/anyconversion","navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion","abstract":[{"type":"text","text":"A type-erased "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Conversion"},{"type":"text","text":"."}],"role":"symbol","type":"topic","title":"AnyConversion","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyConversion/unapply(_:)":{"type":"topic","abstract":[{"text":"Attempts to transform an output back into an input.","type":"text"}],"role":"symbol","kind":"symbol","title":"unapply(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unapply","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyConversion\/unapply(_:)","url":"\/documentation\/parsing\/anyconversion\/unapply(_:)"}}}