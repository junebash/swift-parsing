{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/skip\/parsers"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parsers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Parsers"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"The parser from which this parser receives output."}],"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip\/parsers","interfaceLanguage":"swift"},"metadata":{"title":"parsers","externalID":"s:7Parsing4SkipV7parsersxvp","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parsers","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Parsers"}],"symbolKind":"property","roleHeading":"Instance Property","role":"symbol","modules":[{"name":"Parsing"}]},"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","title":"Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"title":"Skip","url":"\/documentation\/parsing\/skip","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip/parsers":{"role":"symbol","type":"topic","kind":"symbol","title":"parsers","url":"\/documentation\/parsing\/skip\/parsers","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip\/parsers","abstract":[{"text":"The parser from which this parser receives output.","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parsers","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"}]}}}