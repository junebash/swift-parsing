{"identifier":{"url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOO\/parse(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOO"]]},"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/parserbuilder\/zipvoooo\/parse(_:)"]}],"sections":[],"metadata":{"symbolKind":"method","role":"symbol","title":"parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ("},{"kind":"typeIdentifier","text":"P1"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P2"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"P3"},{"kind":"text","text":"."},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P4","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:7Parsing13ParserBuilderO8ZipVOOOOV5parsey6OutputQy__AGQy0_AGQy1_AGQy2_t5InputQzzKF","modules":[{"name":"Parsing"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"input","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P0","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (","kind":"text"},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P4","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":")","kind":"text"}],"languages":["swift"]}]},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"A more well-structured value parsed from the given input."}],"type":"paragraph"}],"kind":"content"},{"parameters":[{"name":"input","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A nebulous, mutable piece of data to be incrementally parsed."}]}]}],"kind":"parameters"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","references":{"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"kind":"symbol","title":"Parse","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"navigatorTitle":[{"text":"Parse","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"topic","url":"\/documentation\/parsing\/parse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","title":"Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder":{"kind":"symbol","title":"ParserBuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs a number of parsers, one after the other, and accumulates their outputs."}],"navigatorTitle":[{"text":"ParserBuilder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder","type":"topic","url":"\/documentation\/parsing\/parserbuilder","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ParserBuilder","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOOO":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOO","url":"\/documentation\/parsing\/parserbuilder\/zipvoooo","abstract":[],"type":"topic","role":"symbol","kind":"symbol","title":"ParserBuilder.ZipVOOOO","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ZipVOOOO"}],"navigatorTitle":[{"kind":"identifier","text":"ZipVOOOO"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserBuilder/ZipVOOOO/parse(_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserBuilder\/ZipVOOOO\/parse(_:)","title":"parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"url":"\/documentation\/parsing\/parserbuilder\/zipvoooo\/parse(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"P0"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ("},{"text":"P1","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P2","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P3","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"P4","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":")"}],"type":"topic"}}}