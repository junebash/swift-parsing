{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many"},"kind":"symbol","sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:decumulator:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:decumulator:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:decumulator:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:decumulator:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:decumulator:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:decumulator:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:decumulator:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:decumulator:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:_:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:_:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:_:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:_:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atMost:_:element:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atMost:_:element:separator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atMost:_:element:separator:terminator:)","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atMost:_:element:terminator:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/decumulator","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/element","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/terminator","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Many","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Separator","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Terminator","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Printability","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7Parsing6ParserP","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"}],"languages":["swift"]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, given a comma-separated string of numbers, one could parse out an array of"},{"type":"text","text":" "},{"type":"text","text":"integers:"}]},{"code":["let intsParser = Many {","  Int.parser()","} separator: {","  \",\"","}","","var input = \"1,2,3\"[...]","try intsParser.parse(&input)  \/\/ [1, 2, 3]","input                         \/\/ \"\""],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In addition to an element and separator parser, a “terminator” parser that is run after the"},{"type":"text","text":" "},{"type":"text","text":"element parser has run as many times as possible. This can be useful for proving that the "},{"type":"codeVoice","code":"Many"},{"type":"text","text":" "},{"type":"text","text":"parser has consumed everything you expect:"}]},{"code":["let intsParser = Many {","  Int.parser()","} separator: {","  \",\"","} terminator: {","  \"---\"","}","","var input = \"1,2,3---\"[...]","try intsParser.parse(&input)  \/\/ [1, 2, 3]","input                         \/\/ \"\""],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The outputs of the element parser do not need to be accumulated in an array. More generally one"},{"type":"text","text":" "},{"type":"text","text":"can specify a closure that customizes how outputs are accumulated, much like"},{"type":"text","text":" "},{"type":"codeVoice","code":"Sequence.reduce(into:_)"},{"type":"text","text":". We could, for example, sum the numbers as we parse them instead of"},{"type":"text","text":" "},{"type":"text","text":"accumulating each value in an array:"}]},{"code":["let sumParser = Many(into: 0, +=) {","  Int.parser()","} separator: {","  \",\"","}","","var input = \"1,2,3\"[...]","try sumParser.parse(&input)  \/\/ 6","input                        \/\/ \"\""],"type":"codeListing","syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser fails if the terminator parser fails. For example, if we required our"},{"type":"text","text":" "},{"type":"text","text":"comma-separated integer parser to be terminated by "},{"code":"\"---\"","type":"codeVoice"},{"type":"text","text":", but we parsed a list that contained"},{"type":"text","text":" "},{"type":"text","text":"a non-integer we would get an error:"}]},{"code":["let intsParser = Many {","  Int.parser()","} separator: {","  \",\"","} terminator: {","  \"---\"","}","var input = \"1,2,Hello---\"[...]","try intsParser.parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:5","\/\/ 1 | 1,2,Hello---","\/\/   |     ^ expected integer"],"type":"codeListing","syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser"]]},"seeAlsoSections":[{"identifiers":["doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream"],"title":"Common parsers","generated":true}],"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"s:7Parsing4ManyV","roleHeading":"Structure","title":"Many","modules":[{"name":"Parsing"}],"role":"symbol","symbolKind":"struct","navigatorTitle":[{"kind":"identifier","text":"Many"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/many"]}],"references":{"doc://co.pointfree.Parsing/documentation/Parsing/Many/Parser-Implementations":{"abstract":[],"role":"collectionGroup","title":"Parser Implementations","kind":"article","type":"topic","url":"\/documentation\/parsing\/many\/parser-implementations","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/Parser-Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/OneOf":{"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OneOf","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/OneOf","title":"OneOf","navigatorTitle":[{"text":"OneOf","kind":"identifier"}],"url":"\/documentation\/parsing\/oneof","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers till one succeeds."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Parse":{"kind":"symbol","title":"Parse","abstract":[{"type":"text","text":"A parser that attempts to run a number of parsers to accumulate their outputs."}],"navigatorTitle":[{"text":"Parse","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parse","type":"topic","url":"\/documentation\/parsing\/parse","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parse","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:atMost:element:separator:)":{"kind":"symbol","type":"topic","title":"init(atLeast:atMost:element:separator:)","role":"symbol","deprecated":true,"abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:separator:)","url":"\/documentation\/parsing\/many\/init(atleast:atmost:element:separator:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Fail":{"abstract":[{"text":"A parser that always fails, no matter the input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Fail","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Fail","url":"\/documentation\/parsing\/fail","role":"symbol","type":"topic","title":"Fail","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Fail","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Always":{"navigatorTitle":[{"kind":"identifier","text":"Always"}],"kind":"symbol","title":"Always","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Always","role":"symbol","url":"\/documentation\/parsing\/always","abstract":[{"type":"text","text":"A parser that always succeeds with the given value, and does not consume any input."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Always"}],"type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:element:)":{"deprecated":true,"kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/parsing\/many\/init(atleast:element:)","title":"init(atLeast:element:)","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:element:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"[Element.Output]"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:_:decumulator:element:terminator:)":{"role":"symbol","kind":"symbol","title":"init(_:into:_:decumulator:element:terminator:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:decumulator:element:terminator:)","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"decumulator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/parsing\/many\/init(_:into:_:decumulator:element:terminator:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(element:separator:)":{"type":"topic","url":"\/documentation\/parsing\/many\/init(element:separator:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"[Element.Output]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Printability"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Separator.Input"},{"text":".","type":"text"}]},"title":"init(element:separator:)","kind":"symbol","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:separator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Rest":{"abstract":[{"text":"A parser that consumes everything to the end of the collection and returns this subsequence as","type":"text"},{"text":" ","type":"text"},{"text":"its output.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Rest","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Rest","url":"\/documentation\/parsing\/rest","role":"symbol","type":"topic","title":"Rest","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Int":{"abstract":[{"text":"A parser that consumes an integer from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Int","url":"\/documentation\/parsing\/int","role":"article","type":"topic","title":"Int"},"doc://co.pointfree.Parsing/documentation/Parsing/End":{"abstract":[{"text":"A parser that succeeds if the input is empty, and fails otherwise.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"End","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/End","url":"\/documentation\/parsing\/end","role":"symbol","type":"topic","title":"End","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"End","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(element:terminator:)":{"type":"topic","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"[Element.Output]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Terminator.Input"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:terminator:)","title":"init(element:terminator:)","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"role":"symbol","url":"\/documentation\/parsing\/many\/init(element:terminator:)","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:element:separator:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:element:separator:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"title":"init(_:element:separator:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" is "},{"code":"[Element.Output]","type":"codeVoice"},{"type":"text","text":", "},{"code":"Separator","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Terminator","type":"codeVoice"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":".","type":"text"}]},"url":"\/documentation\/parsing\/many\/init(_:element:separator:)","role":"symbol","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:element:separator:terminator:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:element:separator:terminator:)","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}]},"title":"init(_:element:separator:terminator:)","url":"\/documentation\/parsing\/many\/init(_:element:separator:terminator:)","kind":"symbol","type":"topic","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/FromSubstring":{"title":"FromSubstring","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromSubstring","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"FromSubstring"}],"deprecated":true,"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FromSubstring"}],"url":"\/documentation\/parsing\/fromsubstring"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atMost:element:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" is "},{"code":"[Element.Output]","type":"codeVoice"},{"type":"text","text":", "},{"code":"Separator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"type":"text","text":", "},{"code":"Terminator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Printability","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":"."}]},"url":"\/documentation\/parsing\/many\/init(atmost:element:)","type":"topic","abstract":[],"kind":"symbol","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"deprecated":true,"title":"init(atMost:element:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:atMost:element:terminator:)":{"role":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:terminator:)","abstract":[],"kind":"symbol","type":"topic","deprecated":true,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(atLeast:atMost:element:terminator:)","url":"\/documentation\/parsing\/many\/init(atleast:atmost:element:terminator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:_:element:terminator:)":{"abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:element:terminator:)","url":"\/documentation\/parsing\/many\/init(into:_:element:terminator:)","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","title":"init(into:_:element:terminator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Parser":{"kind":"symbol","title":"Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" value from an "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" value."}],"navigatorTitle":[{"text":"Parser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","type":"topic","url":"\/documentation\/parsing\/parser","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parser","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy":{"abstract":[{"text":"A parser that waits for a call to its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","isActive":true,"type":"reference"},{"text":" method before running the given closure to","type":"text"},{"text":" ","type":"text"},{"text":"create a parser for the given input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Lazy","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy","url":"\/documentation\/parsing\/lazy","role":"symbol","type":"topic","title":"Lazy","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Lazy","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:_:element:separator:terminator:)":{"url":"\/documentation\/parsing\/many\/init(into:_:element:separator:terminator:)","kind":"symbol","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:element:separator:terminator:)","role":"symbol","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":", "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}]},"title":"init(into:_:element:separator:terminator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixThrough":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input through a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"PrefixThrough","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixThrough","url":"\/documentation\/parsing\/prefixthrough","role":"symbol","type":"topic","title":"PrefixThrough","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixThrough","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:_:element:separator:terminator:)":{"kind":"symbol","role":"symbol","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"title":"init(_:into:_:element:separator:terminator:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Printability","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Never","type":"codeVoice"},{"type":"text","text":", "},{"code":"Element.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Separator.Input","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Separator.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Terminator.Input","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/parsing\/many\/init(_:into:_:element:separator:terminator:)","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:separator:terminator:)","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/element":{"abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"element"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"}],"url":"\/documentation\/parsing\/many\/element","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/element","title":"element"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:_:decumulator:element:separator:)":{"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Printability"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Separator.Input"},{"text":".","type":"text"}]},"title":"init(into:_:decumulator:element:separator:)","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"text":"outputs into a result.","type":"text"}],"url":"\/documentation\/parsing\/many\/init(into:_:decumulator:element:separator:)","role":"symbol","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"decumulator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:decumulator:element:separator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Digits":{"abstract":[{"text":"A parser that consumes a number of digits from the beginning of a collection of UTF-8 code","type":"text"},{"text":" ","type":"text"},{"text":"units.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Digits","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Digits","url":"\/documentation\/parsing\/digits","role":"symbol","type":"topic","title":"Digits","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Digits","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:atMost:_:element:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:)","url":"\/documentation\/parsing\/many\/init(into:atleast:atmost:_:element:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","title":"init(into:atLeast:atMost:_:element:)","type":"topic","kind":"symbol","deprecated":true,"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(element:separator:terminator:)":{"abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"url":"\/documentation\/parsing\/many\/init(element:separator:terminator:)","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"[Element.Output]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"init(element:separator:terminator:)","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:separator:terminator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Skip":{"abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"title":"Skip","url":"\/documentation\/parsing\/skip","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Skip"},"doc://co.pointfree.Parsing/documentation/Parsing/FromUnicodeScalarView":{"deprecated":true,"title":"FromUnicodeScalarView","role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUnicodeScalarView","kind":"identifier"}],"navigatorTitle":[{"text":"FromUnicodeScalarView","kind":"identifier"}],"url":"\/documentation\/parsing\/fromunicodescalarview","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUnicodeScalarView","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/Whitespace":{"abstract":[{"text":"A parser that consumes whitespace from the beginning of input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Whitespace","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Whitespace","url":"\/documentation\/parsing\/whitespace","role":"symbol","type":"topic","title":"Whitespace","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Whitespace","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atMost:_:element:terminator:)":{"role":"symbol","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(into:atMost:_:element:terminator:)","deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atMost:_:element:terminator:)","url":"\/documentation\/parsing\/many\/init(into:atmost:_:element:terminator:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/AnyParser":{"abstract":[{"text":"A type-erased parser of ","type":"text"},{"code":"Output","type":"codeVoice"},{"text":" from ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"title":"AnyParser","url":"\/documentation\/parsing\/anyparser","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/AnyParser"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:_:decumulator:element:terminator:)":{"role":"symbol","title":"init(into:_:decumulator:element:terminator:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"type":"text","text":", "},{"code":"Terminator","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Printability","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Element.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Terminator.Input","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:decumulator:element:terminator:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"decumulator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/many\/init(into:_:decumulator:element:terminator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:atMost:element:separator:terminator:)":{"url":"\/documentation\/parsing\/many\/init(atleast:atmost:element:separator:terminator:)","role":"symbol","title":"init(atLeast:atMost:element:separator:terminator:)","deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:separator:terminator:)","kind":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"type":"topic","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Newline":{"abstract":[],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Newline","kind":"identifier"}],"navigatorTitle":[{"text":"Newline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Newline","title":"Newline","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/newline","deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:atMost:_:element:separator:)":{"type":"topic","deprecated":true,"role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":")"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Printability"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Never"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Separator.Input"},{"text":".","type":"text"}]},"title":"init(into:atLeast:atMost:_:element:separator:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:separator:)","url":"\/documentation\/parsing\/many\/init(into:atleast:atmost:_:element:separator:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:_:element:terminator:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(_:into:_:element:terminator:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:terminator:)","type":"topic","kind":"symbol","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"url":"\/documentation\/parsing\/many\/init(_:into:_:element:terminator:)","role":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:atMost:_:element:separator:terminator:)":{"role":"symbol","deprecated":true,"url":"\/documentation\/parsing\/many\/init(into:atleast:atmost:_:element:separator:terminator:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:separator:terminator:)","title":"init(into:atLeast:atMost:_:element:separator:terminator:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/updateAccumulatingResult":{"type":"topic","url":"\/documentation\/parsing\/many\/updateaccumulatingresult","abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/updateAccumulatingResult","kind":"symbol","title":"updateAccumulatingResult","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateAccumulatingResult"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atMost:_:element:separator:)":{"kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Printability"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Never"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Separator.Input"},{"text":".","type":"text"}]},"deprecated":true,"role":"symbol","url":"\/documentation\/parsing\/many\/init(into:atmost:_:element:separator:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atMost:_:element:separator:)","title":"init(into:atMost:_:element:separator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/separator":{"url":"\/documentation\/parsing\/many\/separator","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/separator","kind":"symbol","role":"symbol","title":"separator","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"separator","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Separator"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:_:element:separator:)":{"title":"init(into:atLeast:_:element:separator:)","role":"symbol","url":"\/documentation\/parsing\/many\/init(into:atleast:_:element:separator:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:_:element:separator:)","type":"topic","deprecated":true,"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Printability"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Never"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Separator.Input"},{"text":".","type":"text"}]},"abstract":[],"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atMost:element:separator:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"text":")","kind":"text"}],"abstract":[],"url":"\/documentation\/parsing\/many\/init(atmost:element:separator:)","type":"topic","title":"init(atMost:element:separator:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:separator:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Result","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"[Element.Output]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"type":"text","text":", "},{"code":"Printability","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Void","type":"codeVoice"},{"type":"text","text":", and "},{"code":"Element.Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Separator.Input","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/FromUTF8View":{"abstract":[],"deprecated":true,"kind":"symbol","navigatorTitle":[{"text":"FromUTF8View","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/FromUTF8View","url":"\/documentation\/parsing\/fromutf8view","role":"symbol","type":"topic","title":"FromUTF8View","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FromUTF8View","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:element:)":{"url":"\/documentation\/parsing\/many\/init(_:element:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"init(_:element:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:element:)","role":"symbol","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/ParserPrinter","url":"\/documentation\/parsing\/parserprinter","abstract":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Parser","isActive":true,"type":"reference"},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}],"kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","title":"ParserPrinter","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"ParserPrinter"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Terminator.Output"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/ParserPrinter-Implementations":{"abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/many\/parserprinter-implementations","type":"topic","role":"collectionGroup","title":"ParserPrinter Implementations"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:_:decumulator:element:separator:terminator:)":{"abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"role":"symbol","url":"\/documentation\/parsing\/many\/init(into:_:decumulator:element:separator:terminator:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decumulator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:decumulator:element:separator:terminator:)","type":"topic","title":"init(into:_:decumulator:element:separator:terminator:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:_:decumulator:element:)":{"url":"\/documentation\/parsing\/many\/init(into:_:decumulator:element:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Separator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"type":"text","text":", "},{"code":"Terminator","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:decumulator:element:)","type":"topic","title":"init(into:_:decumulator:element:)","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decumulator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:element:terminator:)":{"deprecated":true,"title":"init(atLeast:element:terminator:)","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:element:terminator:)","url":"\/documentation\/parsing\/many\/init(atleast:element:terminator:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/String":{"abstract":[{"text":"A parser that consumes a string literal from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/String","url":"\/documentation\/parsing\/string","role":"article","type":"topic","title":"String"},"doc://co.pointfree.Parsing/documentation/Parsing/From":{"abstract":[],"kind":"symbol","navigatorTitle":[{"text":"From","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/From","url":"\/documentation\/parsing\/from","role":"symbol","type":"topic","title":"From","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"From","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/CaseIterable":{"abstract":[{"text":"A parser-printer that consumes a case-iterable, raw representable value from the beginning of a","type":"text"},{"text":" ","type":"text"},{"text":"string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CaseIterable","url":"\/documentation\/parsing\/caseiterable","role":"article","type":"topic","title":"CaseIterable"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/minimum":{"url":"\/documentation\/parsing\/many\/minimum","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimum"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"kind":"symbol","title":"minimum","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/minimum","type":"topic","abstract":[],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:_:decumulator:element:separator:terminator:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decumulator"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:decumulator:element:separator:terminator:)","role":"symbol","title":"init(_:into:_:decumulator:element:separator:terminator:)","type":"topic","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"url":"\/documentation\/parsing\/many\/init(_:into:_:decumulator:element:separator:terminator:)","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atMost:element:separator:terminator:)":{"abstract":[],"title":"init(atMost:element:separator:terminator:)","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:separator:terminator:)","url":"\/documentation\/parsing\/many\/init(atmost:element:separator:terminator:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"kind":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"[Element.Output]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Printability"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Separator.Input"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Separator.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Terminator.Input"},{"text":".","type":"text"}]},"deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/Many/maximum":{"abstract":[],"fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximum"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":"?"}],"url":"\/documentation\/parsing\/many\/maximum","type":"topic","title":"maximum","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/maximum"},"doc://co.pointfree.Parsing/documentation/Parsing/PrefixUpTo":{"abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input up to a given sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"PrefixUpTo","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/PrefixUpTo","url":"\/documentation\/parsing\/prefixupto","role":"symbol","type":"topic","title":"PrefixUpTo","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"PrefixUpTo","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:element:separator:)":{"abstract":[],"role":"symbol","url":"\/documentation\/parsing\/many\/init(atleast:element:separator:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"[Element.Output]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Printability"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Element.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Separator.Input"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","title":"init(atLeast:element:separator:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:element:separator:)","deprecated":true},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:atMost:_:element:terminator:)":{"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:atMost:_:element:terminator:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"title":"init(into:atLeast:atMost:_:element:terminator:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","deprecated":true,"url":"\/documentation\/parsing\/many\/init(into:atleast:atmost:_:element:terminator:)","abstract":[]},"doc://co.pointfree.Parsing/documentation/Parsing/Stream":{"url":"\/documentation\/parsing\/stream","navigatorTitle":[{"text":"Stream","kind":"identifier"}],"title":"Stream","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Stream","kind":"identifier"}],"abstract":[{"text":"A parser that can parse streams of input.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Stream","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/decumulator":{"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decumulator","kind":"identifier"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"AnyIterator","kind":"typeIdentifier","preciseIdentifier":"s:s11AnyIteratorV"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/parsing\/many\/decumulator","title":"decumulator","role":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/decumulator"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:atMost:element:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Element"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"[Element.Output]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Separator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Terminator"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"Printability"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Void"},{"text":".","type":"text"}]},"type":"topic","role":"symbol","deprecated":true,"abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"init(atLeast:atMost:element:)","url":"\/documentation\/parsing\/many\/init(atleast:atmost:element:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:atMost:element:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Peek":{"abstract":[{"text":"A parser that runs the given parser, but does not consume any input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Peek","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Peek","url":"\/documentation\/parsing\/peek","role":"symbol","type":"topic","title":"Peek","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Peek","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Float":{"abstract":[{"text":"A parser that consumes a floating-point number from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Float","url":"\/documentation\/parsing\/float","role":"article","type":"topic","title":"Float"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:_:element:separator:terminator:)":{"url":"\/documentation\/parsing\/many\/init(into:atleast:_:element:separator:terminator:)","kind":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:_:element:separator:terminator:)","role":"symbol","title":"init(into:atLeast:_:element:separator:terminator:)","type":"topic","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"separator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Separator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Bool":{"abstract":[{"text":"A parser that consumes a Boolean value from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Bool","url":"\/documentation\/parsing\/bool","role":"article","type":"topic","title":"Bool"},"doc://co.pointfree.Parsing/documentation/Parsing/First":{"abstract":[{"text":"A parser that consumes the first element from a collection.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"First","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"First","kind":"identifier"}],"title":"First","url":"\/documentation\/parsing\/first","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/First"},"doc://co.pointfree.Parsing/documentation/Parsing/Optionally":{"url":"\/documentation\/parsing\/optionally","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"kind":"symbol","title":"Optionally","abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" if it fails.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Optionally"},"doc://co.pointfree.Parsing/documentation/Parsing/Consumed":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Consumed","navigatorTitle":[{"kind":"identifier","text":"Consumed"}],"type":"topic","abstract":[{"type":"text","text":"A parser that returns the subsequence of input consumed by another parser."}],"title":"Consumed","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Consumed"}],"url":"\/documentation\/parsing\/consumed"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:_:element:separator:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:separator:)","url":"\/documentation\/parsing\/many\/init(_:into:_:element:separator:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":")"}],"type":"topic","title":"init(_:into:_:element:separator:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atLeast:element:separator:terminator:)":{"title":"init(atLeast:element:separator:terminator:)","url":"\/documentation\/parsing\/many\/init(atleast:element:separator:terminator:)","role":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atLeast:element:separator:terminator:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Element","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":", "},{"code":"Result","type":"codeVoice"},{"type":"text","text":" is "},{"code":"[Element.Output]","type":"codeVoice"},{"type":"text","text":", "},{"code":"Separator","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Terminator.Input","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atLeast"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"deprecated":true,"type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/terminator":{"title":"terminator","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/terminator","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"terminator","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"}],"abstract":[],"url":"\/documentation\/parsing\/many\/terminator"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:_:element:)":{"fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/many\/init(_:into:_:element:)","role":"symbol","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:element:)","kind":"symbol","type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"init(_:into:_:element:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/initialResult":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/initialResult","url":"\/documentation\/parsing\/many\/initialresult","type":"topic","kind":"symbol","abstract":[],"role":"symbol","title":"initialResult","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"text":"initialResult","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Prefix":{"type":"topic","url":"\/documentation\/parsing\/prefix","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"title":"Prefix","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Prefix","abstract":[{"text":"A parser that consumes a subsequence from the beginning of its input.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing","role":"collection","kind":"symbol","type":"topic","title":"Parsing","url":"\/documentation\/parsing","abstract":[{"type":"text","text":"A library for turning nebulous data into well-structured data, with a focus on composition,"},{"type":"text","text":" "},{"type":"text","text":"performance, generality, and ergonomics."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atMost:_:element:separator:terminator:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atMost","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atMost:_:element:separator:terminator:)","role":"symbol","title":"init(into:atMost:_:element:separator:terminator:)","abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":", "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Separator.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"deprecated":true,"kind":"symbol","url":"\/documentation\/parsing\/many\/init(into:atmost:_:element:separator:terminator:)"},"doc://co.pointfree.Parsing/documentation/Parsing/Many":{"url":"\/documentation\/parsing\/many","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Many"}],"kind":"symbol","title":"Many","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many","type":"topic","abstract":[{"text":"A parser that attempts to run another parser as many times as specified, accumulating the result","type":"text"},{"text":" ","type":"text"},{"text":"of the outputs.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Many"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:_:element:terminator:)":{"title":"init(into:atLeast:_:element:terminator:)","type":"topic","url":"\/documentation\/parsing\/many\/init(into:atleast:_:element:terminator:)","abstract":[],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:_:element:terminator:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","deprecated":true,"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Never"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atMost:_:element:)":{"deprecated":true,"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atMost:_:element:)","url":"\/documentation\/parsing\/many\/init(into:atmost:_:element:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", ("},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(into:atMost:_:element:)","kind":"symbol","abstract":[],"type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Lazy/parse(_:)":{"abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Lazy\/parse(_:)","url":"\/documentation\/parsing\/lazy\/parse(_:)","role":"symbol","type":"topic","title":"parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"LazyParser","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Not":{"abstract":[{"text":"A parser that succeeds if the given parser fails, and does not consume any input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"Not","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Not","url":"\/documentation\/parsing\/not","role":"symbol","type":"topic","title":"Not","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:_:element:)":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"init(into:_:element:)","url":"\/documentation\/parsing\/many\/init(into:_:element:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}]},"type":"topic","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:element:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/StartsWith":{"abstract":[{"text":"A parser that parses a sequence of elements from its input.","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"StartsWith","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/StartsWith","url":"\/documentation\/parsing\/startswith","role":"symbol","type":"topic","title":"StartsWith","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"StartsWith","kind":"identifier"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:_:decumulator:element:)":{"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"I","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"decumulator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"I","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:decumulator:element:)","title":"init(_:into:_:decumulator:element:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"url":"\/documentation\/parsing\/many\/init(_:into:_:decumulator:element:)","role":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(element:)":{"title":"init(element:)","url":"\/documentation\/parsing\/many\/init(element:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"type":"codeVoice","code":"Result"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":"."}]},"role":"symbol","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(element:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:into:_:decumulator:element:separator:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:into:_:decumulator:element:separator:)","url":"\/documentation\/parsing\/many\/init(_:into:_:decumulator:element:separator:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"I"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"decumulator"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"I"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"kind":"text","text":")"}],"type":"topic","title":"init(_:into:_:decumulator:element:separator:)","role":"symbol","conformance":{"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Separator","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.Parsing/documentation/Parsing/Many/parse(_:)":{"title":"parse(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"}],"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"url":"\/documentation\/parsing\/many\/parse(_:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/parse(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:_:element:separator:)":{"title":"init(into:_:element:separator:)","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/many\/init(into:_:element:separator:)","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:_:element:separator:)","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Element.Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Separator.Input","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"separator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Separator"},{"text":")","kind":"text"}],"type":"topic","abstract":[{"type":"text","text":"Initializes a parser that attempts to run the given parser many times, accumulating the"},{"type":"text","text":" "},{"type":"text","text":"outputs into a result."}]},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(atMost:element:terminator:)":{"abstract":[],"conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"atMost"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"terminator","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Terminator","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(atMost:element:terminator:)","title":"init(atMost:element:terminator:)","url":"\/documentation\/parsing\/many\/init(atmost:element:terminator:)","role":"symbol","type":"topic","deprecated":true,"kind":"symbol"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(into:atLeast:_:element:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(into:atLeast:_:element:)","abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"atLeast","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", (","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":", ","kind":"text"},{"text":"element","kind":"externalParam"},{"text":": () -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")","kind":"text"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"code":"Separator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", ","type":"text"},{"code":"Terminator","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Always<Element.Input, Void>","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"Printability","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Never","type":"codeVoice"},{"text":".","type":"text"}]},"kind":"symbol","deprecated":true,"url":"\/documentation\/parsing\/many\/init(into:atleast:_:element:)","role":"symbol","title":"init(into:atLeast:_:element:)","type":"topic"},"doc://co.pointfree.Parsing/documentation/Parsing/CharacterSet":{"abstract":[{"text":"A parser that consumes the characters contained in a ","type":"text"},{"code":"CharacterSet","type":"codeVoice"},{"text":" from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/CharacterSet","url":"\/documentation\/parsing\/characterset","role":"article","type":"topic","title":"CharacterSet"},"doc://co.pointfree.Parsing/documentation/Parsing/UUID":{"abstract":[{"text":"A parser that consumes a ","type":"text"},{"code":"UUID","type":"codeVoice"},{"text":" value from the beginning of a string.","type":"text"}],"kind":"article","identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/UUID","url":"\/documentation\/parsing\/uuid","role":"article","type":"topic","title":"UUID"},"doc://co.pointfree.Parsing/documentation/Parsing/Many/init(_:element:terminator:)":{"identifier":"doc:\/\/co.pointfree.Parsing\/documentation\/Parsing\/Many\/init(_:element:terminator:)","url":"\/documentation\/parsing\/many\/init(_:element:terminator:)","abstract":[{"text":"Initializes a parser that attempts to run the given parser many times, accumulating the","type":"text"},{"text":" ","type":"text"},{"text":"outputs into a result.","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"element"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"externalParam","text":"terminator"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Terminator"},{"kind":"text","text":")"}],"type":"topic","title":"init(_:element:terminator:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" is "},{"type":"codeVoice","code":"[Element.Output]"},{"type":"text","text":", "},{"type":"codeVoice","code":"Separator"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Always<Element.Input, Void>"},{"type":"text","text":", "},{"type":"codeVoice","code":"Terminator"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":", "},{"type":"codeVoice","code":"Printability"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Void"},{"type":"text","text":", and "},{"type":"codeVoice","code":"Element.Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Terminator.Input"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}}}}